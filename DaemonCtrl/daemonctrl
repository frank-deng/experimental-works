#!/usr/bin/env python3

import os, sys, time, argparse, subprocess;
from DaemonCtrl import DaemonCtrl;

def stat(cmd, pid):
    if (None != pid):
        os.kill(pid, 10);
        time.sleep(2);
    process = subprocess.Popen([cmd[0], 'stat', cmd[1]], stdout = subprocess.PIPE, stderr = subprocess.PIPE);
    stdout, stderr = process.communicate();
    return stdout;

if __name__ == '__main__':
    daemons_all = {
        '2048': DaemonCtrl(['/usr/local/bin/2048', '/home/user/.2048.log']),
        'guessnum': DaemonCtrl(['/usr/local/bin/guessnum-stat', '/home/user/.guessnum-stat.txt']),
    };

    parser = argparse.ArgumentParser();
    parser.add_argument('daemon', metavar='Daemon', type=str, nargs=1, help='Daemon name');
    parser.add_argument('operation', metavar='Operation', type=str, nargs=1, help='Operation');
    args = parser.parse_args();

    daemon_name = args.daemon[0];
    if (daemon_name not in daemons_all):
        print('Daemon %s not found.'%daemon_name);
        exit(1);
    daemon = daemons_all[args.daemon[0]];
    operation = args.operation[0];
    if ('start' == operation):
        if daemon.start():
            print('Successfully started daemon %s.'%daemon_name);
            exit(0);
        else:
            print('Failed to start daemon %s.'%daemon_name);
            exit(1);
    elif ('stop' == operation):
        if daemon.stop():
            print('Successfully stopped daemon %s.'%daemon_name);
            exit(0);
        else:
            print('Failed to stop daemon %s.'%daemon_name);
            exit(1);
    elif ('status' == operation):
        if (None != daemon.getpid()):
            print('Daemon %s is running.'%daemon_name);
        else:
            print('Daemon %s is not running.'%daemon_name);
    elif ('stat' == operation):
        sys.stdout.write(stat(daemon.getcmd(), daemon.getpid()).decode('UTF-8'));
        exit(0);
    else:
        print('Unknown operation %s.'%operation);
        exit(1);

