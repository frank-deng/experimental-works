DEFINT A-Z

DIM SHARED ASM(300) AS INTEGER,P(20) AS INTEGER
DIM SHARED N(9999) AS INTEGER,NU(5039) AS INTEGER,T(9999)AS INTEGER
DIM SHARED RES(1,15) AS LONG
COMMON SHARED NOCSV,RMAX

PRINT "Initializing...";
DEF SEG=VARSEG(ASM(0))
BLOAD "GSTAT.BSV",VARPTR(ASM(0)):ASM(1)=VARPTR(P(0)):ASM(3)=VARSEG(P(0))
P(0)=0:P(1)=VARSEG(N(0)):P(2)=VARPTR(N(0))
P(3)=VARSEG(NU(0)):P(4)=VARPTR(NU(0))
CALL ABSOLUTE(VARPTR(ASM(0)))
DEF SEG

REM CALL TEST

RANDOMIZE TIMER
F$="GSTAT.CSV"
NOCSV=0:RMAX=7

CALL LOADDATA(F$)
CLS
LOCATE 25,1:PRINT "Press Esc to exit";

CALL PRINTSTAT
TS#=TIMER:TP#=TIMER
G0=0:G1=0
WHILE G0>=0 AND G1>=0
  TM#=TIMER
  IF TM#<TP# OR TM#-TP#>1 THEN TP#=TM#:CALL PRINTSTAT
  IF TM#<TS# OR TM#-TS#>120 THEN TS#=TM#:CALL SAVEDATA(F$)
  G0=-1:G1=-1
  G0=GUESS:IF G0>0 THEN G1=GUESSM
  IF G0>0 AND G1>0 THEN
    G0=G0-1
    RES(0,G0)=RES(0,G0)+1
    G1=G1-1
    RES(1,G1)=RES(1,G1)+1
    IF G0>RMAX THEN RMAX=G0
    IF G1>RMAX THEN RMAX=G1
  END IF
WEND
CLS:CALL SAVEDATA(F$):END

ErrorHandler:
NOCSV=1
RESUME NEXT

SUB PRINTSTAT
  LOCATE 1,1:PRINT "Guesses     Normal Mastermind"
  SUM0=0:SUM1=0
  FOR I=0 TO RMAX
    PRINT LTRIM$(STR$(I+1));TAB(9);
    PRINT USING "########## ##########";RES(0,I);RES(1,I)
    SUM0=SUM0+RES(0,I):SUM1=SUM1+RES(1,I)
  NEXT I
  PRINT "Total";TAB(9);
  PRINT USING "########## ##########";SUM0;SUM1
END SUB

SUB LOADDATA(FILENAME AS STRING)
  DIM IDX AS INTEGER,P AS INTEGER
  ON ERROR GOTO ErrorHandler
  OPEN FILENAME FOR INPUT AS #1
  ON ERROR GOTO 0
  IF NOCSV<>0 THEN EXIT SUB
  LINE INPUT #1,S$
  WHILE NOT EOF(1)
    LINE INPUT #1,S$
    S$=LTRIM$(RTRIM$(S$))
    IF S$<>"" THEN
      P=INSTR(S$,","):V$=LEFT$(S$,P-1):S$=MID$(S$,P+1)
      G=VAL(V$)-1
      IF G>RMAX THEN RMAX=G
      P=INSTR(S$,","):V$=LEFT$(S$,P-1):S$=MID$(S$,P+1)
      RES(0,G)=VAL(V$):RES(1,G)=VAL(S$)
    END IF
  WEND
  CLOSE #1
END SUB

SUB SAVEDATA(FILENAME AS STRING)
  DIM ROWS AS INTEGER
  ROWS=7
  FOR I=8 TO 15
    IF RES(0,I)>0 OR RES(1,I)>0 THEN ROWS=I
  NEXT I
  OPEN FILENAME FOR OUTPUT AS #1
  PRINT #1,"Guesses,Normal,Mastermind"
  FOR I=0 TO ROWS
    PRINT #1,LTRIM$(RTRIM$(STR$(I+1)));
    PRINT #1,",";LTRIM$(RTRIM$(STR$(RES(0,I))));
    PRINT #1,",";LTRIM$(RTRIM$(STR$(RES(1,I))))
  NEXT I
  CLOSE #1
END SUB

FUNCTION GUESS()
  DIM ANS AS INTEGER,G AS INTEGER,TL AS INTEGER,TP AS INTEGER,TIMES AS INTEGER
  DIM RS AS INTEGER,RS2 AS INTEGER
  DIM I AS INTEGER,NI AS INTEGER,NG AS INTEGER
  ANS=INT(RND*5039):G=INT(RND*5039)
  IF ANS=G THEN GUESS=1:EXIT FUNCTION
  ANS=NU(ANS):NG=NU(G)
  P(0)=1:P(1)=ANS:P(2)=NG
  DEF SEG=VARSEG(ASM(0)):CALL ABSOLUTE(VARPTR(ASM(0))):DEF SEG
  RS=P(0):TL=0:TIMES=1
  FOR I=0 TO 5039
    IF INKEY$=CHR$(27) THEN GUESS=-1:EXIT FUNCTION
    IF I<>G THEN
      NI=NU(I)
      P(0)=1:P(1)=NI:P(2)=NG
      DEF SEG=VARSEG(ASM(0)):CALL ABSOLUTE(VARPTR(ASM(0))):DEF SEG
      RS2=P(0)
      IF RS=RS2 THEN T(TL)=NI:TL=TL+1
    END IF
  NEXT I
  WHILE TL>1
    G=INT(RND*(TL-1)):NG=T(G)
    P(0)=1:P(1)=ANS:P(2)=NG
    DEF SEG=VARSEG(ASM(0)):CALL ABSOLUTE(VARPTR(ASM(0))):DEF SEG
    RS=P(0)
    IF RS=&H40 THEN GUESS=TIMES+1:EXIT FUNCTION
    TP=0:FOR I=0 TO TL-1
      IF INKEY$=CHR$(27) THEN GUESS=-1:EXIT FUNCTION
      IF I<>G THEN
        NI=T(I)
        P(0)=1:P(1)=NI:P(2)=NG
        DEF SEG=VARSEG(ASM(0)):CALL ABSOLUTE(VARPTR(ASM(0))):DEF SEG
        RS2=P(0)
        IF RS=RS2 THEN T(TP)=NI:TP=TP+1
      END IF
    NEXT I
    TL=TP:TIMES=TIMES+1
  WEND
  IF T(0)<>ANS OR TL<1 THEN CLS:PRINT "Error";T(0);ANS;TL:END
  GUESS=TIMES
END FUNCTION

FUNCTION GUESSM()
  DIM ANS AS INTEGER,G AS INTEGER,TL AS INTEGER,TP AS INTEGER,TIMES AS INTEGER
  DIM I AS INTEGER
  ANS=INT(RND*9999):G=INT(RND*9999)
  IF ANS=G THEN GUESSM=1:EXIT FUNCTION
  ANS=N(ANS):NG=N(G)
  P(0)=1:P(1)=ANS:P(2)=NG
  DEF SEG=VARSEG(ASM(0)):CALL ABSOLUTE(VARPTR(ASM(0))):DEF SEG
  RS=P(0):TL=0:TIMES=1
  FOR I=0 TO 9999
    IF INKEY$=CHR$(27) THEN GUESSM=-1:EXIT FUNCTION
    NI=N(I)
    IF NI<>NG THEN
      P(0)=1:P(1)=NI:P(2)=NG
      DEF SEG=VARSEG(ASM(0)):CALL ABSOLUTE(VARPTR(ASM(0))):DEF SEG
      RS2=P(0)
      IF RS=RS2 THEN T(TL)=NI:TL=TL+1
    END IF
  NEXT I
  WHILE TL>1
    G=INT(RND*(TL-1)):NG=T(G):IF NG=ANS THEN GUESSM=TIMES+1:EXIT FUNCTION
    P(0)=1:P(1)=ANS:P(2)=NG
    DEF SEG=VARSEG(ASM(0)):CALL ABSOLUTE(VARPTR(ASM(0))):DEF SEG
    RS=P(0)
    TP=0:FOR I=0 TO TL-1
      IF INKEY$=CHR$(27) THEN GUESSM=-1:EXIT FUNCTION
      IF I<>G THEN
        NI=T(I)
        P(0)=1:P(1)=NI:P(2)=NG
        DEF SEG=VARSEG(ASM(0)):CALL ABSOLUTE(VARPTR(ASM(0))):DEF SEG
        RS2=P(0)
        IF RS=RS2 THEN T(TP)=NI:TP=TP+1
      END IF
    NEXT I
    TL=TP:TIMES=TIMES+1
  WEND
  IF T(0)<>ANS OR TL<1 THEN CLS:PRINT "Error2";T(0);ANS;TL:END
  GUESSM=TIMES
END FUNCTION

SUB TEST
  PRINT "asm init ok"
  P=0:FOR I=0 TO 9999
    NUM&=BCDL&(N(I))
    IF INT2BCD&(I)<>NUM& THEN PRINT "Error":END
    IF UNIQDIGIT(NUM&)<>0 THEN
      IF NU(P)<>N(I) THEN PRINT "Error":END
      P=P+1
    END IF
  NEXT I

  PRINT "Init Success"

  P(0)=1:P(1)=&H1234:P(2)=&H1423
  DEF SEG=VARSEG(ASM(0)):CALL ABSOLUTE(VARPTR(ASM(0))):DEF SEG
  IF P(0)<>&H13 THEN PRINT "Error comp";HEX$(P(0)):END
  FOR I=0 TO 9999:LOCATE ,1:PRINT I;:FOR J=I TO 9999
    A=N(I):B=N(J):P(0)=1:P(1)=A:P(2)=B
    DEF SEG=VARSEG(ASM(0)):CALL ABSOLUTE(VARPTR(ASM(0))):DEF SEG
    IF COMP(A,B)<>P(0) THEN PRINT "Error comp";I;J:END
    IF CHR$(27)=INKEY$ THEN END
  NEXT J:NEXT I

  PRINT "Comp Success"
  END
END SUB

FUNCTION UNIQDIGIT(N AS LONG)
  DIM D0 AS INTEGER,D1 AS INTEGER,D2 AS INTEGER
  D0=N AND 15:D1=(N\16) AND 15
  IF D0=D1 THEN EXIT FUNCTION
  D2=(N\256) AND 15
  IF D2=D0 OR D2=D1 THEN EXIT FUNCTION
  D3=(N\4096)
  IF D3=D0 OR D3=D1 OR D3=D2 THEN EXIT FUNCTION
  UNIQDIGIT=1
END FUNCTION

FUNCTION INT2BCD&(N AS INTEGER)
  DIM NL AS LONG
  NL=CLNG(N\1000)
  NL=NL*4096
  NL=NL OR (((N\100) MOD 10)*256) OR (((N\10) MOD 10)*16) OR (N MOD 10)
  INT2BCD&=NL
END FUNCTION

FUNCTION BCDL&(N AS INTEGER)
  DIM RS AS LONG
  DEF SEG=VARSEG(N)
  RS=PEEK(VARPTR(N)+1)
  RS=(RS*256) OR PEEK(VARPTR(N))
  DEF SEG
  BCDL&=RS
END FUNCTION

FUNCTION COMP(A0 AS INTEGER,B0 AS INTEGER)
  DIM A AS LONG,B AS LONG,DA AS INTEGER,DB AS INTEGER,R AS INTEGER
  DIM I AS INTEGER
  DIM C(10,2) AS INTEGER
  A=BCDL&(A0):B=BCDL&(B0):R=0
  DA=CINT(A\4096):DB=CINT(B\4096)
  IF DA=DB THEN R=R+16 ELSE C(DA,0)=C(DA,0)+1:C(DB,1)=C(DB,1)+1
  DA=CINT((A\256) AND 15):DB=CINT((B\256) AND 15)
  IF DA=DB THEN R=R+16 ELSE C(DA,0)=C(DA,0)+1:C(DB,1)=C(DB,1)+1
  DA=CINT((A\16) AND 15):DB=CINT((B\16) AND 15)
  IF DA=DB THEN R=R+16 ELSE C(DA,0)=C(DA,0)+1:C(DB,1)=C(DB,1)+1
  DA=CINT(A AND 15):DB=CINT(B AND 15)
  IF DA=DB THEN R=R+16 ELSE C(DA,0)=C(DA,0)+1:C(DB,1)=C(DB,1)+1
  FOR I=0 TO 9:DA=C(I,0):DB=C(I,1)
    IF DA<DB THEN R=R+DA ELSE R=R+DB
  NEXT I
  COMP=R
END FUNCTION

