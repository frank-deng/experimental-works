
DEFINT A-Z

TYPE BMPHeaderT
    id AS STRING * 2
    size AS LONG
    rr1 AS INTEGER
    rr2 AS INTEGER
    offset AS LONG
    hsize AS LONG
    wid AS LONG
    hei AS LONG
    planes AS INTEGER
    bpp AS INTEGER
    pakbyte AS LONG
    imagebytes AS LONG
    xres AS LONG
    yres AS LONG
    colch AS LONG
    ic AS LONG
END TYPE

DIM BMPFILE(11) AS STRING
DIM BF(128) AS INTEGER
DIM SHARED DPAL(15,2) AS INTEGER

FOR I=0 TO 11:READ BMPFILE(I):NEXT I
DATA "00.BMP","01.BMP","02.BMP","03.BMP"
DATA "04.BMP","05.BMP","06.BMP","07.BMP"
DATA "08.BMP","09.BMP","10.BMP","11.BMP"

FOR I=0 TO 15:READ DPAL(I,0),DPAL(I,1),DPAL(I,2):NEXT I
DATA &H00,&H00,&H00, &H00,&H00,&Ha8, &H00,&Ha8,&H00, &H00,&Ha8,&Ha8
DATA &Ha8,&H00,&H00, &Ha8,&H00,&Ha8, &Ha8,&Ha8,&H00, &Ha8,&Ha8,&Ha8
DATA &H54,&H54,&H54, &H54,&H54,&Hff, &H54,&Hff,&H54, &H54,&Hff,&Hff
DATA &Hff,&H54,&H54, &Hff,&H54,&Hff, &Hff,&Hff,&H54, &Hff,&Hff,&Hff

CALL LOADBMP("FRAMES\"+BMPFILE(0),BF())

END

SUB LOADBMP(FBMP AS STRING,BUF() AS INTEGER)
  STATIC hdr AS BMPHeaderT,PAL AS STRING*64
  STATIC LN AS STRING*80
  STATIC I AS INTEGER
  DIM COLTAB(15) AS INTEGER

  OPEN FBMP FOR BINARY AS #1
  GET #1,1,hdr
  IF "BM"<>hdr.id THEN PRINT "Invalid BMP File.":END
  W=hdr.wid: H=hdr.hei
  IF W<>80 OR H<>50 OR hdr.bpp<>4 THEN PRINT "Not 80x50x16 BMP file.":END
  rowBytesBmp=((W+31)\32)*4
  GET #1,15+hdr.hsize,PAL
  PRINT 15+hdr.hsize
  FOR I=0 TO 15
    B=ASC(MID$(PAL,I*4+1,1))
    G=ASC(MID$(PAL,I*4+2,1))
    R=ASC(MID$(PAL,I*4+3,1))
    COLTAB(I)=GETCOLOR(R,G,B)
    PRINT R;G;B;COLTAB(I)
  NEXT I

  CLOSE #1
END SUB

FUNCTION GETCOLOR(R AS INTEGER,G AS INTEGER,B AS INTEGER)
  STATIC I AS INTEGER,D AS LONG,DMIN AS LONG,RS AS INTEGER
  DMIN=-1:RS=0
  FOR I=0 TO 15
    D=(R-DPAL(I,0))^2 + (G-DPAL(I,1))^2 + (B-DPAL(I,2))^2
    IF DMIN=-1 OR D<DMIN THEN DMIN=D:RS=I
  NEXT I
  GETCOLOR=RS
END FUNCTION

