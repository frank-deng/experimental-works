DEFINT A-Z
TYPE REGSTYPE
  AX AS INTEGER
  BX AS INTEGER
  CX AS INTEGER
  DX AS INTEGER
  BP AS INTEGER
  SI AS INTEGER
  DI AS INTEGER
  DS AS INTEGER
  ES AS INTEGER
  FLAGS AS INTEGER
END TYPE
DECLARE SUB INITASM()
DECLARE SUB INTX(N AS INTEGER,REGS AS REGSTYPE)
DIM SHARED ASMINTX(47) AS INTEGER
COMMON SHARED REGS AS REGSTYPE

DIM SHARED ARR(128) AS INTEGER

CALL INITASM
CLS:LOCATE 1,1
S$="IntX test.$"
DEF SEG=VARSEG(ARR(0)):P=VARPTR(ARR(0))
FOR I=1 TO LEN(S$)
  V=ASC(MID$(S$,I,1))
  POKE P,V
  P=P+1
NEXT I
DEF SEG
REGS.AX=&H0900
REGS.DS=VARSEG(ARR(0))
REGS.DX=VARPTR(ARR(0))+1
CALL INTX(&H21, REGS)

LOCATE 2,1
REGS.AX=&H300
REGS.BX=0
CALL INTX(&H10, REGS)
PRINT HEX$(REGS.CX);" ";HEX$(REGS.DX);" ";HEX$(REGS.FLAGS)
END

DATA &H50,&H53,&H51,&H52,&H55,&H56,&H57,&H1E,&H6,&HBE,&H0,&H0,&HB8,&H0,&H0,&H2E,&H89,&H36,&H58,&H1,&H2E,&HA3,&H5A,&H1,&H8E,&HD8,&HB9,&H9,&H0,&HFF,&H34,&H83,&HC6,&H2,&HE2,&HF9,&H7,&H1F,&H5F,&H5E,&H5D,&H5A,&H59,&H5B,&H58,&HCD,&H0,&H9C,&H6,&H1E,&H57,&H56,&H55,&H52,&H51,&H53,&H50,&H2E,&HA1,&H5A,&H1,&H8E,&HD8,&H2E,&H8B,&H36,&H58,&H1,&HB9,&HA,&H0,&H8F,&H4,&H83,&HC6,&H2,&HE2,&HF9,&H7,&H1F,&H5F,&H5E,&H5D,&H5A,&H59,&H5B,&H58,&HCB,&H0,&H0,&H0,&H0,&H0

SUB INITASM
  DEF SEG = VARSEG(ASMINTX(0)): P = VARPTR(ASMINTX(0))
  FOR I = 0 TO 92: READ V: POKE P, V: P = P + 1: NEXT I
  DEF SEG
END SUB

SUB INTX (N AS INTEGER, REGS AS REGSTYPE)
  STATIC DS AS INTEGER,SI AS INTEGER,P AS INTEGER
  DS=VARSEG(REGS):SI=VARPTR(REGS)
  DEF SEG=VARSEG(DS):P=VARPTR(DS):DS0=PEEK(P): DS1=PEEK(P+1)
  DEF SEG=VARSEG(SI):P=VARPTR(SI):SI0=PEEK(P): SI1=PEEK(P+1)
  DEF SEG=VARSEG(ASMINTX(0)): P=VARPTR(ASMINTX(0))
  POKE P+&H2E,N
  POKE P+&HA,SI0:POKE P+&HB,SI1
  POKE P+&HD,DS0:POKE P+&HE,DS1
  CALL ABSOLUTE(P)
  DEF SEG
END SUB

